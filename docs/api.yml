openapi: 3.0.0
info:
  title: Modeso-Cart
  version: 0.1.0
paths:
  /api/cart:
    post:
      summary: Add product To Cart if the product exist will increase the amount
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addToCartRequestBody'
      # parameters:
      #   - in: body
      #     name: productId
      #     required: true
      #     description: productId as string from product service (string)
      #   - in: body
      #     name: title
      #     required: true
      #     description: product Title (string)
      #   - in: body
      #     name: image
      #     required: true
      #     description: product Image (string)
      #   - in: body
      #     name: description
      #     required: true
      #     description: product description (string)
      #   - in: body
      #     name: price
      #     required: true
      #     description: product price (number)
      #   - in: body
      #     name: amount
      #     required: true
      #     description: product quantity in cart (number)
      #   - in: body
      #     name: packagePrice
      #     required: true
      #     description: packaging price (number)
      #   - in: body
      #     name: isPackagingSelected
      #     description: isPackaging option selected(boolean)
      tags:
        - modeso-cart
      responses:
        '200':
          description: Product has been added successfully
          content:
            application/json:
              schema:
                properties:
                  cart:
                    $ref: '#/components/schemas/addToCartResponse'
                  message: 
                    type: string
                  totalPrice: 
                    type: number
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
  /api/carts/{cartId}/{productId}:
    put:
      summary: update product amount or isPackagingSelected status
      parameters:
        - in: path
          name: cartId
          required: true
          description: Cart Id 
        - in: path
          name: productId
          required: true
          description: product Id 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProductRequest'
      tags:
        - modeso-cart
      responses:
        '200':
          description: Product has been added successfully
          content:
            application/json:
              schema:
                properties:
                  cart:
                    $ref: '#/components/schemas/addToCartResponse'
                  message: 
                    type: string
                  totalPrice: 
                    type: number
        '400':
          description: A JSON Bad Request Error Response.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '401':
          description: Non Authorized User 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '404':
          description: Cart Or Product Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
  /api/cart/{cartId}/count:
    get:
      summary: all cart items count 
      parameters: 
        - in: path
          name: cartId
          required: true
          description: Cart Id
      responses: 
        '200':
          description: cart Products count has been fetched successfully
          content:
            application/json:
              schema:
                properties:
                  count: 
                    type: number
        '401':
          description: Non Authorized User 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '404':
          description: Cart Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
  /api/cart/{cartId}/total:
    get:
      summary: all cart total price 
      parameters: 
        - in: path
          name: cartId
          required: true
          description: Cart Id
      responses: 
        '200':
          description: cart total price has been fetched successfully
          content:
            application/json:
              schema:
                properties:
                  total: 
                    type: number
        '401':
          description: Non Authorized User 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '404':
          description: Cart Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
  /api/cart/{cartId}/:
    get:
      summary: all cart items 
      parameters: 
        - in: path
          name: cartId
          required: true
          description: Cart Id
      responses: 
        '200':
          description: Product has been added successfully
          content:
            application/json:
              schema:
                properties:
                  cart:
                    $ref: '#/components/schemas/addToCartResponse'
                  message: 
                    type: string
                  totalPrice: 
                    type: number
        '401':
          description: Non Authorized User 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '404':
          description: Cart Or Product Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
  /api/carts/{cart_Id}/{product_Id}:
    delete:
      summary: remove product from cart
      parameters:
        - in: path
          name: cartId
          required: true
          description: Cart Id 
        - in: path
          name: productId
          required: true
          description: product Id 
      tags:
        - modeso-cart
      responses:
        '200':
          description: Product has been added successfully
          content:
            application/json:
              schema:
                properties:
                  cart:
                    $ref: '#/components/schemas/addToCartResponse'
                  message: 
                    type: string
                  totalPrice: 
                    type: number
        '400':
          description: A JSON Bad Request Error Response.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '401':
          description: Non Authorized User 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '404':
          description: Cart Or Product Not Found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponseModel'
        '500':
          description: Internal Server Error Error Message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'                

components:
  schemas:
    addToCartRequestBody:
      type: object
      properties:
        productId:
          required: true
          type: string
        title:
          type: string
          required: true
        image:
          type: string
          required: true
        description:
          type: string
          required: true
        price:
          type: string
          required: true
        amount:
          type: string
          required: true
        packagePrice: 
          type: number
          required: true
        isPackagingSelected:
          type: boolean
          required: false
    addToCartRequestBody:
      type: object
      properties:
        productId:
          required: true
          type: string
        title:
          type: string
          required: true
        image:
          type: string
          required: true
        description:
          type: string
          required: true
        price:
          type: string
          required: true
        amount:
          type: string
          required: true
        packagePrice: 
          type: number
          required: true
        isPackagingSelected:
          type: boolean
          required: false
    updateProductRequest:
      type: object
      properties:
        amount:
          type: number
          required: true
        isPackagingSelected:
          type: boolean
          required: false
    addToCartResponse:
      properties:
          _id:
            type: string
          products:
            $ref: '#/components/schemas/products'
          deliveryOptions:
            $ref: '#/components/schemas/deliveryOptions'
          userId:
            type: string
    products:
      type: array
      items:
        type: object
        properties:
          _id: 
            type: string
          productId:
            type: string
          title:
            type: string
          description: 
            type: string
          price:
            type: number
          amount: 
            type: number
          packagePrice: 
            type: number
          isPackagingSelected:
            type: boolean
    deliveryOptions:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          price:
            type: number
    ErrorResponseModel:
      type: object
      properties:
        message:
          type: string
        error:
          type: string